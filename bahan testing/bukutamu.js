// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Untitled', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Untitled', async function() {
    await driver.get("http://bukutamu-dev.divmu.pindad.co.id/")
    await driver.manage().window().setRect(1050, 708)
    await driver.findElement(By.id("btn-login-dark")).click()
    await driver.findElement(By.id("btn-login-blur")).click()
    {
      const element = await driver.findElement(By.id("btn-login-light"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.id("btn-login-light"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.id("btn-login-light"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.id("btn-login-light")).click()
    {
      const element = await driver.findElement(By.id("username"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.id("username"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.id("username"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.id("username")).click()
    await driver.findElement(By.id("username")).sendKeys("admin")
    await driver.findElement(By.id("password")).click()
    await driver.findElement(By.id("password")).sendKeys("admin123")
    {
      const element = await driver.findElement(By.css(".width-35"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".width-35"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.css(".width-35"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css(".width-35")).click()
    await driver.findElement(By.css(".fa-user")).click()
    await driver.findElement(By.id("sidebar-toggle-icon")).click()
    await driver.findElement(By.id("nama")).click()
    await driver.findElement(By.id("nama")).sendKeys("deby")
    await driver.findElement(By.id("nama")).click()
    await driver.findElement(By.id("username")).click()
    await driver.findElement(By.id("username")).sendKeys("deby")
    await driver.findElement(By.id("password")).click()
    await driver.findElement(By.id("password")).sendKeys("oke")
    await driver.findElement(By.name("level")).click()
    {
      const dropdown = await driver.findElement(By.name("level"))
      await dropdown.findElement(By.xpath("//option[. = 'Penerima Tamu']")).click()
    }
    await driver.findElement(By.name("level")).click()
    {
      const element = await driver.findElement(By.name("btnSubmit"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.name("btnSubmit"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.name("btnSubmit"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("tbody:nth-child(7) .btn-info > .ace-icon")).click()
    await driver.findElement(By.id("nama")).click()
    await driver.findElement(By.id("nama")).sendKeys("sin")
    await driver.findElement(By.css(".form-horizontal")).click()
    {
      const element = await driver.findElement(By.name("btnSubmit"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.name("btnSubmit"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.name("btnSubmit"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.name("btnSubmit")).click()
    await driver.findElement(By.css("tbody:nth-child(2) .btn-inverse > .ace-icon")).click()
    await driver.findElement(By.css(".fa-cog")).click()
    await driver.findElement(By.css(".btn-colorpicker")).click()
    await driver.findElement(By.css("li:nth-child(2) > .colorpick-btn")).click()
    await driver.findElement(By.css(".btn-colorpicker")).click()
    await driver.findElement(By.css("li:nth-child(3) > .colorpick-btn")).click()
    await driver.findElement(By.css(".btn-colorpicker")).click()
    await driver.findElement(By.css("li:nth-child(4) > .colorpick-btn")).click()
    await driver.findElement(By.id("ace-settings-hover")).click()
    await driver.findElement(By.css(".btn-colorpicker")).click()
    await driver.findElement(By.css(".dropdown-menu")).click()
    await driver.findElement(By.css("li:nth-child(2) > .colorpick-btn")).click()
    {
      const element = await driver.findElement(By.linkText("Logout"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.linkText("Logout"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.linkText("Logout"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.linkText("Logout")).click()
    await driver.findElement(By.name("btnSubmit")).click()
  })
})
